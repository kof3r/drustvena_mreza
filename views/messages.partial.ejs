<style>
#main-content {
    margin-bottom: 0;
}
#contacts-box {
    background: #eee;
    color: darkgrey;
    margin: 0;
    padding: 0;
    border: 1px solid black;
    border-right: 0;
    heigth: 100%;
    overflow-y: scroll;
}
#contacts-box > ul {
    list-style: none;
    margin: 0;
    padding: 0;
}
#contacts-box > ul > li {
    margin: 0;
}
#contacts-box > ul > li > a {
    display: block;
    padding: 15px 10px 15px 5px;
}
#contacts-box > ul > li > a:hover {
    background: #fff;
    text-decoration: none;
}
#contacts-box > ul > li > a > img {
    width: 36px;
    heigth: 36px;
    float: left;
    margin: 0 5px;
    border-radius: 2px;
}
#contacts-box > ul > li > a > div.time {
    color: darkgrey;
    float: right;
}
#contacts-box > ul > li > a > div.message {
    color: #666;
    height: 1.2em;
    overflow: hidden;
}

@media (max-width: 768px) {
    #messages-box {
        margin: 0 20px;
    }
}
#messages-box {
    border: 1px solid black;
    border-bottom: 0;
    padding: 10px 0;
    margin-right: 0;
    padding-right: 0;
}
#messages-box > h4 {
	padding: 0 15px;
}

#messages-box > ol {
    overflow-y: scroll;
    min-height: 200px;
    max-height: 65vh;
}

#messages-box > ol.messages {
    list-style: none;
    margin: 0 15px;
    padding: 0;
}

#messages-box > ol.messages > li {
    float: left;
    clear: both;
    max-width: 512px;
}

#messages-box > ol.messages > li.my {
    float: right;
}

#messages-box > ol.messages > li > div.header {
    margin: 5px 20px -10px 20px;
    font: 0.8em sans-serif;
    color: grey;
}

#messages-box > ol.messages > li > div.header > span {
    padding: 5px;
    margin: 0 5px;
    background-color: #fff;
    border-radius: 5px;
    visibility: hidden;
}
#messages-box > ol.messages > li:hover > div.header > span {
    visibility: visible;
}

#messages-box > ol.messages > li.my > div.message {
    word-wrap: break-word;
    background-color: #cba;
}

#messages-box > ol.messages > li > div.message {
    background-color: #eee;
    color: #333;
    border-radius: 5px;
    padding: 15px;
    margin: 5px;
}

#message-editor {
    border: 1px solid;
    padding: 15px;
    resize: none;
    overflow: none;
}
</style>


<div>
    <div id="contacts-box" class="col-sm-4">
        <ul class="contacts">
        </ul>
    </div>
    <div class="col-sm-8" id="messages-box">
		<h4></h4>
        <ol class="messages">
        </ol>
    </div>
    <textarea class="col-sm-offset-4 col-sm-8 col-xs-12" id="message-editor" placeholder="Type a message here and press return to send"></textarea>
</div>

<script>
var contacts = $('#contacts-box .contacts');
var messages = $('#messages-box > ol.messages');
var editor = $('#message-editor');
var recipient_username;

function appendMessage(dt, msg, username, my) {
        messages.append('<li class="'+my+'"><div class="header"><span class="username">' + username + '</span><span class="time">' + dateFormat(dt, 'dd/mm/yyyy HH:MM') + '</span></div><div class="message">' + msg + '</div></li>');
        messages.scrollTop(messages.prop('scrollHeight'));
}
  
editor.keypress(function(e) {
    if(e.which == 13) {
        e.preventDefault();
        editor.attr('disabled', 'disabled');
        var newMessage = escapeHtml(editor.val());
        
        if (newMessage.length) {
			/*
            socket.emit(
                'chat message', {blah}
            );
            */
            $.post('/api/message/' + recipient_username, { message: newMessage }, function() {
				if (messages.prop('scrollHeight') > 1000) {
					messages.children().slice(0, 2).remove();
				}
				appendMessage(this.created_at, newMessage, globalUsername, 'my');
				editor.val('');
			});
        }
        editor.removeAttr('disabled');
            editor.focus();
    }
});

function selectContact() {
	$('#messages-box > h4').html(recipient_username);
	messages.html('');
}

function updateRecentContacts(data) {
	var templateFunction = doT.template(document.getElementById('messages-contacts-tmp').text);
	function update(collection) {
		$.each(collection, function() {
			if(this.sender != globalUsername) {
				contacts.html(templateFunction(this));
			}
		});
	}
	if(data && data.data.length) {
		update(data.data.messages);
	}
	else {
		$.ajax({
				url: 'api/message/my',
				cache: false,
				success:
					function(data) {
						update(data.data.messages);
					}
				});
	}
}

function receiveMessages() {
	if(recipient_username) {
		$.ajax({
				url:'/api/message/unread', 
				cache: false, 
				success:
					function(data) {
						$.each(data.data.messages, function() {
							if(this.sender == recipient_username) {
								appendMessage(this.created_at, this.message, this.sender, '');
								$.post('/api/message/mark/' + this.id);
							}
						});
						updateRecentContacts(data);
					}
		});
	}
	else {
		updateRecentContacts();
	}
}

function loadMessages() {
	if(recipient_username) {
		$.ajax({
				url: '/api/message/my/' + recipient_username,
				cache: false,
				success: 
					function(data) {
						data.data.messages.sort(function(a, b){
							if (a.created_at > b.created_at){
							  return 1;
							} else if (a.created_at < b.created_at){
							  return -1;
							} else {
								return 0;
							}
						});
						$('#messages-box ol.messages').html('');
						$.each(data.data.messages, function() {
							var my = '';
							if (this.sender == globalUsername) {
								my='my';
							}
							appendMessage(this.created_at, this.message, this.sender, my);
						});
					}
		});
	}
	else {
		
	}
}

$(document).ready(function() {
	recipient_username = window.location.hash.substring(1);
	if (recipient_username) {
		selectContact();
		loadMessages();
	}
	window.setInterval(receiveMessages, 3000);
});

$(window).on('hashchange', function() {
	selectContact();
	recipient_username = window.location.hash.substring(1);
});
</script>

<!-- Messaging contacts -->
<script id="messages-contacts-tmp" type="text/x-dot-template">
  
	<li>
		<a href="/messages#{{= it.sender }}">
			<!--<img src="/images/avatar.jpg">-->
			<span class="user">{{= it.sender }}</span>
			<div class="time">
				<span class="glyphicon glyphicon-time"></span> 
				{{= dateFormat(it.created_at, dateTimeFormat) }}
			</div>
			<div class="message">{{= it.message }}</div>
		</a>
	</li>
	
</script>